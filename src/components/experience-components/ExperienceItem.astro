---
    interface Props {
        title: string
        companyOrCenter: string 
        date: string 
        description: string 
        extraDescriptionArr?: string[] 
        typeExperience: string
    }

    const { title, companyOrCenter, date, description, extraDescriptionArr, typeExperience } = Astro.props
---

<div class=`block ${typeExperience === 'workExperience' && 'md:flex'} gap-x-5`>
    <div class=`${typeExperience === 'workExperience' && 'md:w-5/12'} mb-5 md:mb-0`>
        <div class=`absolute w-3 h-3 mt-2.5 -start-[7px]
                    ${typeExperience === 'workExperience' ? 'bg-yellow-500/80 dark:bg-yellow-400' : 'bg-blue-600 dark:bg-blue-400'}
                    rounded-full`></div>
        <h3 class=`text-2xl font-semibold 
                    ${typeExperience === 'workExperience' ? 'text-yellow-500/80 dark:text-yellow-400' : 'text-blue-600 dark:text-blue-400'}
                    `>{title}</h3>
        <h3 class="text-xl font-semibold text-pink-600/90">{companyOrCenter}</h3>
        <h3 class=`text-lg mb-1 font-semibold 
                    ${typeExperience === 'workExperience' ? 'text-blue-600/90 dark:text-blue-400/90' : 'text-yellow-500/80 dark:text-yellow-400/80'}
                    `>{date}</h3>
    </div>
    <div class=`${typeExperience === 'workExperience' && 'md:w-7/12'}`>
        <p class="mb-4 text-base font-normal">{description}</p>   
        {
            extraDescriptionArr && (
            <div class="extraDescriptionContainer max-h-0 overflow-hidden transition-all duration-500 ease-in-out">
                    {
                        extraDescriptionArr.map(text => 
                            <p class="mb-4">{text}</p>
                        )
                    }
            </div>     
            <p class="showExtraDescriptionButton mb-4 text-yellow-500 font-normal cursor-pointer">Ver m√°s...</p> 
            )
        }            
    </div>
</div>
